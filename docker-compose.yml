version: '3.8'

services:
  # Laravel Application
  app:
    build:
      context: .
      dockerfile: Dockerfile.simple
    container_name: techstore_app
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - .:/var/www/html
      - ./storage:/var/www/html/storage
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_KEY=${APP_KEY}
      - DB_CONNECTION=sqlite
      - DB_DATABASE=/var/www/html/database/database.sqlite
    depends_on:
      - mysql
    networks:
      - techstore_network

  # MySQL Database (opcional, puedes usar SQLite en su lugar)
  mysql:
    image: mysql:8.0
    container_name: techstore_mysql
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: techstore
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_USER: techstore_user
      MYSQL_PASSWORD: techstore_password
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - techstore_network

  # Redis for caching (opcional)
  redis:
    image: redis:7-alpine
    container_name: techstore_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - techstore_network

  # Nginx (si prefieres usar Nginx en lugar de Apache)
  # nginx:
  #   image: nginx:alpine
  #   container_name: techstore_nginx
  #   restart: unless-stopped
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - .:/var/www/html
  #     - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
  #     - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
  #   depends_on:
  #     - app
  #   networks:
  #     - techstore_network

volumes:
  mysql_data:
    driver: local

networks:
  techstore_network:
    driver: bridge
